---
// MACD Tickets Management Page - Complete Implementation
import BaseLayout from "../layouts/BaseLayout.astro";
import { DataService } from "../lib/data";

const title = "Telco - MACD Tickets";

// Load real ticket data
const tickets = await DataService.getTickets();
const mACDTickets = tickets.filter(ticket => ticket.type === 'macd');

// Calculate real stats
const openTickets = mACDTickets.filter(t => ['new', 'open'].includes(t.status)).length;
const pendingTickets = mACDTickets.filter(t => t.status === 'pending').length; 
const closedTickets = mACDTickets.filter(t => t.status === 'closed').length;

// MACD type counts
const moveCount = mACDTickets.filter(t => t.description.toLowerCase().includes('move')).length;
const addCount = mACDTickets.filter(t => t.description.toLowerCase().includes('add')).length;
const changeCount = mACDTickets.filter(t => t.description.toLowerCase().includes('change')).length;
const disconnectCount = mACDTickets.filter(t => t.description.toLowerCase().includes('disconnect')).length;
---
---

<BaseLayout title={title} pageTitle="MACD Tickets" currentPage="tickets">
  <!-- Page Header -->
  <div class="mb-6">
    <div class="flex items-center justify-between">
      <div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">MACD Ticket Management</h2>
        <p class="text-gray-600 dark:text-gray-300">Move, Add, Change, Disconnect requests with full audit trail</p>
      </div>
      <button 
        id="create-macd-btn"
        class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition flex items-center"
      >
        <i class="fas fa-plus mr-2"></i> Create MACD Request
      </button>
    </div>
    
    <!-- MACD Stats -->
    <div class="grid grid-cols-1 md:grid-cols-5 gap-4 mt-6">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-blue-100 dark:bg-blue-900 rounded-lg">
            <i class="fas fa-arrows-alt text-blue-600 dark:text-blue-400"></i>
          </div>
          <div class="ml-4">
            <div class="text-2xl font-bold text-gray-900 dark:text-white">{moveCount}</div>
            <div class="text-sm text-gray-500 dark:text-gray-400">Move Requests</div>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-green-100 dark:bg-green-900 rounded-lg">
            <i class="fas fa-plus text-green-600 dark:text-green-400"></i>
          </div>
          <div class="ml-4">
            <div class="text-2xl font-bold text-gray-900 dark:text-white">{addCount}</div>
            <div class="text-sm text-gray-500 dark:text-gray-400">Add Requests</div>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg">
            <i class="fas fa-edit text-yellow-600 dark:text-yellow-400"></i>
          </div>
          <div class="ml-4">
            <div class="text-2xl font-bold text-gray-900 dark:text-white">{changeCount}</div>
            <div class="text-sm text-gray-500 dark:text-gray-400">Change Requests</div>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-red-100 dark:bg-red-900 rounded-lg">
            <i class="fas fa-minus text-red-600 dark:text-red-400"></i>
          </div>
          <div class="ml-4">
            <div class="text-2xl font-bold text-gray-900 dark:text-white">{disconnectCount}</div>
            <div class="text-sm text-gray-500 dark:text-gray-400">Disconnect Requests</div>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-purple-100 dark:bg-purple-900 rounded-lg">
            <i class="fas fa-clock text-purple-600 dark:text-purple-400"></i>
          </div>
          <div class="ml-4">
            <div class="text-2xl font-bold text-gray-900 dark:text-white">{openTickets}</div>
            <div class="text-sm text-gray-500 dark:text-gray-400">Open Tickets</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow mb-6 p-4">
    <div class="flex flex-wrap gap-4 items-center">
      <div class="flex-1 min-w-64">
        <input 
          type="text" 
          id="search-tickets"
          placeholder="Search tickets by ID, subject, or requestor..." 
          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white"
        >
      </div>
      
      <select id="filter-type" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
        <option value="">All Types</option>
        <option value="move">Move</option>
        <option value="add">Add</option>
        <option value="change">Change</option>
        <option value="disconnect">Disconnect</option>
      </select>
      
      <select id="filter-status" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
        <option value="">All Statuses</option>
        <option value="new">New</option>
        <option value="in_progress">In Progress</option>
        <option value="awaiting_info">Awaiting Info</option>
        <option value="completed">Completed</option>
        <option value="closed">Closed</option>
      </select>
      
      <select id="filter-priority" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
        <option value="">All Priorities</option>
        <option value="low">Low</option>
        <option value="medium">Medium</option>
        <option value="high">High</option>
        <option value="urgent">Urgent</option>
      </select>
      
      <button id="clear-filters" class="px-4 py-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white">
        Clear Filters
      </button>
    </div>
  </div>

  <!-- MACD Tickets Table -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white">MACD Requests</h3>
    </div>
    
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
        <thead class="bg-gray-50 dark:bg-gray-700">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Ticket ID</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Type</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Subject</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Requestor</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Priority</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Status</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Effective Date</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody id="tickets-tbody" class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
          <!-- Tickets will be populated by JavaScript -->
        </tbody>
      </table>
    </div>
  </div>
---

<BaseLayout title={title} pageTitle="Support Tickets" currentPage="tickets">
  <!-- Page Header -->
  <div class="mb-6">
    <div class="flex items-center justify-between">
      <div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Support Tickets</h2>
        <p class="text-gray-600 dark:text-gray-300">Manage and track support tickets with audit trail</p>
      </div>
      <!-- Create Ticket Button -->
      <button 
        id="create-ticket-btn"
        class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition flex items-center"
      >
        <i class="fas fa-plus mr-2"></i> Create New Ticket
      </button>
    </div>
    
    <!-- Ticket Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mt-6">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-red-100 dark:bg-red-900 rounded-lg">
            <i class="fas fa-exclamation-circle text-red-600 dark:text-red-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Open Tickets</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{openTickets}</p>
          </div>
        </div>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg">
            <i class="fas fa-clock text-yellow-600 dark:text-yellow-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Pending</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{pendingTickets}</p>
          </div>
        </div>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-green-100 dark:bg-green-900 rounded-lg">
            <i class="fas fa-check-circle text-green-600 dark:text-green-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Closed</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{closedTickets}</p>
          </div>
        </div>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-blue-100 dark:bg-blue-900 rounded-lg">
            <i class="fas fa-list text-blue-600 dark:text-blue-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Total</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{tickets.length}</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Tickets Table -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white">All Tickets</h3>
    </div>
    
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
        <thead class="bg-gray-50 dark:bg-gray-900">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ID</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Title</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Type</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Priority</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Assignee</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Created</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
          {tickets.map((ticket) => (
            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer ticket-row" data-ticket-id={ticket.id}>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                #{String(ticket.id).padStart(3, '0')}
              </td>
              <td class="px-6 py-4">
                <div class="text-sm font-medium text-gray-900 dark:text-white">{ticket.title}</div>
                <div class="text-sm text-gray-500 dark:text-gray-400 truncate max-w-xs">{ticket.description}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200">
                  {ticket.type ? ticket.type.replace('_', ' ') : 'General'}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                  ticket.status === 'open' 
                    ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
                    : ticket.status === 'pending'
                    ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
                    : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                }`}>
                  {ticket.status}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                  ticket.priority === 'high' 
                    ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
                    : ticket.priority === 'medium'
                    ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
                    : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                }`}>
                  {ticket.priority}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                {ticket.assigneeName || 'Unassigned'}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                {ticket.createdAt instanceof Date ? ticket.createdAt.toLocaleDateString() : new Date(ticket.createdAt).toLocaleDateString()}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <div class="flex space-x-2">
                  <button class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 view-details-btn" title="View Details">
                    <i class="fas fa-eye"></i>
                  </button>
                  <button class="text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-200 edit-btn" title="Edit">
                    <i class="fas fa-edit"></i>
                  </button>
                  <button class="text-purple-600 hover:text-purple-800 dark:text-purple-400 dark:hover:text-purple-200 audit-btn" title="Audit Trail">
                    <i class="fas fa-history"></i>
                  </button>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>

  <!-- New Ticket Modal -->
  <div id="newTicketModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-screen overflow-y-auto">
        <div class="p-6 border-b border-gray-200">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900">Create New Support Ticket</h3>
            <button id="new-ticket-close-btn" class="text-gray-400 hover:text-gray-600">
              <i class="fas fa-times"></i>
            </button>
          </div>
          <p class="text-sm text-gray-600 mt-1">Submit a support request to the TEM team</p>
        </div>
        
        <form class="p-6 space-y-6">
          <!-- Ticket Type -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Request Type</label>
            <select id="new-ticket-type" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500">
              <option value="line_management">Line Management Request</option>
              <option value="carrier_issue">Carrier Issue</option>
              <option value="billing_inquiry">Billing Inquiry</option>
              <option value="service_interruption">Service Interruption</option>
              <option value="new_service_setup">New Service Setup</option>
              <option value="account_changes">Account Changes</option>
              <option value="technical_support">Technical Support</option>
              <option value="other">Other</option>
            </select>
          </div>

          <!-- Priority -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Priority Level</label>
            <div class="grid grid-cols-4 gap-2">
              <label class="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
                <input type="radio" name="priority" value="low" class="mr-2">
                <div>
                  <div class="font-medium text-green-600">Low</div>
                  <div class="text-xs text-gray-500">48h response</div>
                </div>
              </label>
              <label class="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
                <input type="radio" name="priority" value="medium" checked class="mr-2">
                <div>
                  <div class="font-medium text-yellow-600">Medium</div>
                  <div class="text-xs text-gray-500">24h response</div>
                </div>
              </label>
              <label class="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
                <input type="radio" name="priority" value="high" class="mr-2">
                <div>
                  <div class="font-medium text-red-600">High</div>
                  <div class="text-xs text-gray-500">4h response</div>
                </div>
              </label>
              <label class="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
                <input type="radio" name="priority" value="urgent" class="mr-2">
                <div>
                  <div class="font-medium text-red-600">Urgent</div>
                  <div class="text-xs text-gray-500">1h response</div>
                </div>
              </label>
            </div>
          </div>

          <!-- Affected Lines -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Affected Phone Lines (Optional)</label>
            <input 
              type="text" 
              placeholder="Enter phone numbers (e.g., 555-123-4567, 555.789.0123)"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
            >
            <p class="text-xs text-gray-500 mt-1">Separate multiple numbers with commas</p>
          </div>

          <!-- Subject -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Subject</label>
            <input 
              type="text" 
              placeholder="Brief description of the issue"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
            >
          </div>

          <!-- Description -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Detailed Description</label>
            <textarea 
              rows="6" 
              placeholder="Please provide detailed information about your request, including steps to reproduce any issues, error messages, and any troubleshooting already attempted."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
            ></textarea>
          </div>

          <!-- Department -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Your Department</label>
            <select class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500">
              <option>IT Administration</option>
              <option>Finance</option>
              <option>Human Resources</option>
              <option>Operations</option>
              <option>Sales</option>
              <option>Management</option>
              <option>Other</option>
            </select>
          </div>

          <!-- Attachments -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Attachments (Optional)</label>
            <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition">
              <i class="fas fa-upload text-gray-400 text-2xl mb-2"></i>
              <p class="text-sm text-gray-600">Drop files here or click to upload</p>
              <p class="text-xs text-gray-500 mt-1">Screenshots, logs, or other relevant files</p>
              <input type="file" multiple class="hidden">
            </div>
          </div>

          <!-- Buttons -->
          <div class="flex justify-end space-x-3 pt-4 border-t border-gray-200">
            <button type="button" onclick="closeNewTicketModal()" class="px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50 transition">
              Cancel
            </button>
            <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition">
              Submit Ticket
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Ticket Detail Modal -->
  <div id="ticketDetailModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-screen overflow-y-auto">
        <div id="ticket-modal-content">
          <!-- Modal Header -->
          <div class="p-6 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
            <h3 id="detail-title" class="text-2xl font-bold text-gray-900 dark:text-white">Ticket Title</h3>
            <button id="detail-ticket-close-btn" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
              <i class="fas fa-times fa-lg"></i>
            </button>
          </div>

          <!-- Modal Body -->
          <div class="p-6 grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Left Column: Description & Activity -->
            <div class="md:col-span-2 space-y-6">
              <div>
                <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">Description</h4>
                <p id="detail-description" class="text-gray-600 dark:text-gray-300 whitespace-pre-wrap">Loading...</p>
              </div>
              <div>
                <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4">Activity</h4>
                <div class="space-y-4">
                  <!-- Placeholder for comments/activity -->
                  <div class="text-center py-4 text-gray-500 dark:text-gray-400">
                    <i class="fas fa-history mr-2"></i>
                    Audit trail and comments will appear here.
                  </div>
                </div>
              </div>
            </div>

            <!-- Right Column: Metadata -->
            <div class="space-y-6 bg-gray-50 dark:bg-gray-900 p-4 rounded-lg">
              <div>
                <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">Details</h4>
                <dl class="space-y-3">
                  <div class="flex justify-between">
                    <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Status</dt>
                    <dd id="detail-status" class="text-sm text-gray-900 dark:text-white">Loading...</dd>
                  </div>
                  <div class="flex justify-between">
                    <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Priority</dt>
                    <dd id="detail-priority" class="text-sm text-gray-900 dark:text-white">Loading...</dd>
                  </div>
                  <div class="flex justify-between">
                    <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Type</dt>
                    <dd id="detail-type" class="text-sm text-gray-900 dark:text-white">Loading...</dd>
                  </div>
                  <div class="flex justify-between">
                    <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Assignee</dt>
                    <dd id="detail-assignee" class="text-sm text-gray-900 dark:text-white">Loading...</dd>
                  </div>
                  <div class="flex justify-between">
                    <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Created</dt>
                    <dd id="detail-created" class="text-sm text-gray-900 dark:text-white">Loading...</dd>
                  </div>
                </dl>
              </div>
              <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
                <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">Actions</h4>
                <div class="flex flex-col space-y-2">
                  <button class="w-full text-left px-3 py-2 rounded-md text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700"><i class="fas fa-edit w-6 mr-1"></i> Edit Ticket</button>
                  <button class="w-full text-left px-3 py-2 rounded-md text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700"><i class="fas fa-comment w-6 mr-1"></i> Add Comment</button>
                  <button class="w-full text-left px-3 py-2 rounded-md text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700"><i class="fas fa-history w-6 mr-1"></i> View Audit Trail</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- MACD Creation Modal -->
  <div id="macd-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-screen overflow-y-auto">
        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Create MACD Request</h3>
            <button id="close-macd-modal" class="text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300">
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>
        
        <form id="macd-form" class="p-6 space-y-6">
          <!-- Request Type Selection -->
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Request Type</label>
            <div class="grid grid-cols-1 md:grid-cols-4 gap-3">
              <label class="flex items-center p-3 border-2 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                <input type="radio" name="macd-type" value="move" class="mr-3">
                <div class="flex items-center">
                  <i class="fas fa-arrows-alt text-blue-500 mr-2"></i>
                  <span class="font-medium">Move</span>
                </div>
              </label>
              <label class="flex items-center p-3 border-2 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                <input type="radio" name="macd-type" value="add" class="mr-3">
                <div class="flex items-center">
                  <i class="fas fa-plus text-green-500 mr-2"></i>
                  <span class="font-medium">Add</span>
                </div>
              </label>
              <label class="flex items-center p-3 border-2 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                <input type="radio" name="macd-type" value="change" class="mr-3">
                <div class="flex items-center">
                  <i class="fas fa-edit text-yellow-500 mr-2"></i>
                  <span class="font-medium">Change</span>
                </div>
              </label>
              <label class="flex items-center p-3 border-2 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                <input type="radio" name="macd-type" value="disconnect" class="mr-3">
                <div class="flex items-center">
                  <i class="fas fa-minus text-red-500 mr-2"></i>
                  <span class="font-medium">Disconnect</span>
                </div>
              </label>
            </div>
          </div>

          <!-- General Information -->
          <div class="space-y-4">
            <h4 class="text-md font-semibold text-gray-900 dark:text-white">General Information</h4>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Subject</label>
                <input type="text" name="subject" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Priority</label>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <label class="flex items-center p-2 border rounded cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700">
                    <input type="radio" name="priority" value="low" class="mr-2">
                    <div>
                      <div class="font-medium text-green-600 text-sm">Low</div>
                      <div class="text-xs text-gray-500">48h response</div>
                    </div>
                  </label>
                  <label class="flex items-center p-2 border rounded cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700">
                    <input type="radio" name="priority" value="medium" checked class="mr-2">
                    <div>
                      <div class="font-medium text-yellow-600 text-sm">Medium</div>
                      <div class="text-xs text-gray-500">24h response</div>
                    </div>
                  </label>
                  <label class="flex items-center p-2 border rounded cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700">
                    <input type="radio" name="priority" value="high" class="mr-2">
                    <div>
                      <div class="font-medium text-red-600 text-sm">High</div>
                      <div class="text-xs text-gray-500">4h response</div>
                    </div>
                  </label>
                  <label class="flex items-center p-2 border rounded cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700">
                    <input type="radio" name="priority" value="urgent" class="mr-2">
                    <div>
                      <div class="font-medium text-red-800 text-sm">Urgent</div>
                      <div class="text-xs text-gray-500">1h response</div>
                    </div>
                  </label>
                </div>
              </div>
            </div>

            <!-- Requested By Information -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Requested By (Name)</label>
                <input type="text" name="requested-by-name" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email</label>
                <input type="email" name="requested-by-email" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Department</label>
                <input type="text" name="requested-by-department" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
            </div>

            <!-- Different Requestee Option -->
            <div>
              <label class="flex items-center">
                <input type="checkbox" id="different-requestee" class="mr-2">
                <span class="text-sm text-gray-700 dark:text-gray-300">Request is for a different person</span>
              </label>
            </div>

            <!-- Requested For Information (hidden by default) -->
            <div id="requestee-fields" class="hidden">
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Requested For (Name)</label>
                  <input type="text" name="requested-for-name" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email</label>
                  <input type="email" name="requested-for-email" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Department</label>
                  <input type="text" name="requested-for-department" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
                </div>
              </div>
            </div>
          </div>

          <!-- Line/Device Details -->
          <div class="space-y-4">
            <h4 class="text-md font-semibold text-gray-900 dark:text-white">Line/Device Details</h4>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Phone Number / Circuit ID</label>
                <input type="text" name="phone-number" placeholder="(555) 123-4567 or Circuit ID" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Device Type</label>
                <select name="device-type" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
                  <option value="">Select device type</option>
                  <option value="smartphone">Smartphone</option>
                  <option value="basic-phone">Basic Phone</option>
                  <option value="tablet">Tablet</option>
                  <option value="hotspot">Mobile Hotspot</option>
                  <option value="other">Other</option>
                </select>
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">IMEI / Serial Number</label>
                <input type="text" name="imei" placeholder="Device IMEI or Serial Number" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Carrier</label>
                <select name="carrier" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
                  <option value="">Select carrier</option>
                  <option value="verizon">Verizon</option>
                  <option value="att">AT&T</option>
                  <option value="tmobile">T-Mobile</option>
                  <option value="sprint">Sprint</option>
                  <option value="other">Other</option>
                </select>
              </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Current Plan</label>
                <input type="text" name="current-plan" placeholder="Current plan name" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Requested Plan</label>
                <input type="text" name="requested-plan" placeholder="Desired plan name" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
              </div>
            </div>
            
            <!-- Location for Moves -->
            <div id="location-field" class="hidden">
              <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">New Location (for Move requests)</label>
              <input type="text" name="location" placeholder="New address or location" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
            </div>
          </div>

          <!-- Action Details -->
          <div class="space-y-4">
            <h4 class="text-md font-semibold text-gray-900 dark:text-white">Request Details</h4>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Detailed Description</label>
              <textarea name="description" rows="4" required placeholder="Provide detailed information about the request..." class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white"></textarea>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Effective Date</label>
              <input type="date" name="effective-date" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white">
            </div>
          </div>

          <!-- Form Actions -->
          <div class="flex justify-end space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700">
            <button type="button" id="cancel-macd" class="px-4 py-2 text-gray-700 dark:text-gray-300 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700">
              Cancel
            </button>
            <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
              Create MACD Request
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Ticket Detail Modal -->
  <div id="ticket-detail-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-screen overflow-y-auto">
        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white" id="ticket-detail-title">Ticket Details</h3>
            <button id="close-detail-modal" class="text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300">
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>
        
        <div id="ticket-detail-content" class="p-6">
          <!-- Content will be populated by JavaScript -->
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Modal elements
  const mACDModal = document.getElementById('macd-modal');
  const createMACDBtn = document.getElementById('create-macd-btn');
  const closeMACDModal = document.getElementById('close-macd-modal');
  const cancelMACDBtn = document.getElementById('cancel-macd');
  const mACDForm = document.getElementById('macd-form');
  
  const ticketDetailModal = document.getElementById('ticket-detail-modal');
  const closeDetailModal = document.getElementById('close-detail-modal');
  
  // Filter elements
  const searchInput = document.getElementById('search-tickets');
  const filterType = document.getElementById('filter-type');
  const filterStatus = document.getElementById('filter-status');
  const filterPriority = document.getElementById('filter-priority');
  const clearFilters = document.getElementById('clear-filters');
  
  // Dynamic form elements
  const mACDTypeRadios = document.querySelectorAll('input[name="macd-type"]');
  const locationField = document.getElementById('location-field');
  const differentRequesteeCheckbox = document.getElementById('different-requestee');
  const requesteeFields = document.getElementById('requestee-fields');

  // Show/hide location field based on MACD type
  mACDTypeRadios.forEach(radio => {
    radio.addEventListener('change', (e) => {
      if (e.target.value === 'move') {
        locationField.classList.remove('hidden');
      } else {
        locationField.classList.add('hidden');
      }
    });
  });

  // Show/hide requestee fields
  differentRequesteeCheckbox?.addEventListener('change', (e) => {
    if (e.target.checked) {
      requesteeFields.classList.remove('hidden');
    } else {
      requesteeFields.classList.add('hidden');
    }
  });

  // Modal controls
  createMACDBtn?.addEventListener('click', () => {
    mACDModal.classList.remove('hidden');
  });

  closeMACDModal?.addEventListener('click', () => {
    mACDModal.classList.add('hidden');
    mACDForm.reset();
  });

  cancelMACDBtn?.addEventListener('click', () => {
    mACDModal.classList.add('hidden');
    mACDForm.reset();
  });

  closeDetailModal?.addEventListener('click', () => {
    ticketDetailModal.classList.add('hidden');
  });

  // Close modals when clicking outside
  mACDModal?.addEventListener('click', (e) => {
    if (e.target === mACDModal) {
      mACDModal.classList.add('hidden');
      mACDForm.reset();
    }
  });

  ticketDetailModal?.addEventListener('click', (e) => {
    if (e.target === ticketDetailModal) {
      ticketDetailModal.classList.add('hidden');
    }
  });

  // MACD Form submission
  mACDForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());
    
    // Validate required fields
    const requiredFields = ['macd-type', 'subject', 'requested-by-name', 'requested-by-email', 'requested-by-department', 'description', 'effective-date'];
    const missingFields = requiredFields.filter(field => !data[field]);
    
    if (missingFields.length > 0) {
      alert(`Please fill in all required fields: ${missingFields.join(', ')}`);
      return;
    }

    // Prepare MACD request data
    const mACDRequest = {
      requestType: data['macd-type'],
      priority: data.priority || 'medium',
      subject: data.subject,
      actionDescription: data.description,
      effectiveDate: data['effective-date'],
      requestedBy: {
        name: data['requested-by-name'],
        email: data['requested-by-email'],
        department: data['requested-by-department']
      },
      lineDetails: {
        phoneNumber: data['phone-number'],
        deviceType: data['device-type'],
        imei: data.imei,
        carrier: data.carrier,
        currentPlan: data['current-plan'],
        requestedPlan: data['requested-plan'],
        location: data.location
      }
    };

    // Add "requested for" if different person
    if (differentRequesteeCheckbox.checked) {
      mACDRequest.requestedFor = {
        name: data['requested-for-name'],
        email: data['requested-for-email'],
        department: data['requested-for-department']
      };
    }

    try {
      const response = await fetch('/api/tickets/macd', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(mACDRequest)
      });

      const result = await response.json();

      if (response.ok) {
        alert(`MACD ${data['macd-type']} request created successfully! Ticket ID: ${result.ticket.id}`);
        mACDModal.classList.add('hidden');
        mACDForm.reset();
        loadTickets(); // Refresh the tickets table
      } else {
        alert(`Error: ${result.error || 'Failed to create MACD request'}`);
      }
    } catch (error) {
      console.error('Error submitting MACD request:', error);
      alert('Failed to submit MACD request. Please try again.');
    }
  });

  // Clear filters
  clearFilters?.addEventListener('click', () => {
    searchInput.value = '';
    filterType.value = '';
    filterStatus.value = '';
    filterPriority.value = '';
    loadTickets();
  });

  // Filter change handlers
  [searchInput, filterType, filterStatus, filterPriority].forEach(element => {
    element?.addEventListener('change', loadTickets);
    element?.addEventListener('input', debounce(loadTickets, 300));
  });

  // Load and display tickets
  async function loadTickets() {
    try {
      const params = new URLSearchParams();
      
      if (filterType.value) params.append('type', filterType.value);
      if (filterStatus.value) params.append('status', filterStatus.value);
      if (filterPriority.value) params.append('priority', filterPriority.value);

      const response = await fetch(`/api/tickets/macd?${params.toString()}`);
      const result = await response.json();

      if (response.ok) {
        displayTickets(result.tickets);
        updateStats(result.tickets);
      } else {
        console.error('Error loading tickets:', result.error);
      }
    } catch (error) {
      console.error('Error loading tickets:', error);
    }
  }

  // Display tickets in table
  function displayTickets(tickets) {
    const tbody = document.getElementById('tickets-tbody');
    const searchTerm = searchInput.value.toLowerCase();

    // Filter by search term
    const filteredTickets = tickets.filter(ticket => 
      ticket.id.toLowerCase().includes(searchTerm) ||
      ticket.subject.toLowerCase().includes(searchTerm) ||
      ticket.requestedBy.name.toLowerCase().includes(searchTerm) ||
      ticket.requestedBy.email.toLowerCase().includes(searchTerm)
    );

    tbody.innerHTML = filteredTickets.map(ticket => `
      <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer" onclick="showTicketDetail('${ticket.id}')">
        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">${ticket.id}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getTypeColor(ticket.requestType)}">
            ${getTypeIcon(ticket.requestType)} ${ticket.requestType.toUpperCase()}
          </span>
        </td>
        <td class="px-6 py-4 text-sm text-gray-900 dark:text-white">${ticket.subject}</td>
        <td class="px-6 py-4 text-sm text-gray-900 dark:text-white">${ticket.requestedBy.name}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getPriorityColor(ticket.priority)}">
            ${ticket.priority.toUpperCase()}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(ticket.status)}">
            ${ticket.status.replace('_', ' ').toUpperCase()}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
          ${new Date(ticket.effectiveDate).toLocaleDateString()}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
          <button onclick="event.stopPropagation(); changeStatus('${ticket.id}', '${ticket.status}')" class="text-indigo-600 hover:text-indigo-900 mr-2">
            Update
          </button>
          <button onclick="event.stopPropagation(); showTicketDetail('${ticket.id}')" class="text-blue-600 hover:text-blue-900">
            View
          </button>
        </td>
      </tr>
    `).join('');
  }

  // Update statistics
  function updateStats(tickets) {
    const moveCount = tickets.filter(t => t.requestType === 'move').length;
    const addCount = tickets.filter(t => t.requestType === 'add').length;
    const changeCount = tickets.filter(t => t.requestType === 'change').length;
    const disconnectCount = tickets.filter(t => t.requestType === 'disconnect').length;
    const pendingCount = tickets.filter(t => ['new', 'in_progress', 'awaiting_info'].includes(t.status)).length;

    document.getElementById('move-count').textContent = moveCount;
    document.getElementById('add-count').textContent = addCount;
    document.getElementById('change-count').textContent = changeCount;
    document.getElementById('disconnect-count').textContent = disconnectCount;
    document.getElementById('pending-count').textContent = pendingCount;
  }

  // Helper functions for styling
  function getTypeColor(type) {
    const colors = {
      move: 'bg-blue-100 text-blue-800',
      add: 'bg-green-100 text-green-800',
      change: 'bg-yellow-100 text-yellow-800',
      disconnect: 'bg-red-100 text-red-800'
    };
    return colors[type] || 'bg-gray-100 text-gray-800';
  }

  function getTypeIcon(type) {
    const icons = {
      move: '⟷',
      add: '+',
      change: '✎',
      disconnect: '−'
    };
    return icons[type] || '';
  }

  function getPriorityColor(priority) {
    const colors = {
      low: 'bg-green-100 text-green-800',
      medium: 'bg-yellow-100 text-yellow-800',
      high: 'bg-orange-100 text-orange-800',
      urgent: 'bg-red-100 text-red-800'
    };
    return colors[priority] || 'bg-gray-100 text-gray-800';
  }

  function getStatusColor(status) {
    const colors = {
      new: 'bg-blue-100 text-blue-800',
      in_progress: 'bg-yellow-100 text-yellow-800',
      awaiting_info: 'bg-orange-100 text-orange-800',
      completed: 'bg-green-100 text-green-800',
      closed: 'bg-gray-100 text-gray-800'
    };
    return colors[status] || 'bg-gray-100 text-gray-800';
  }

  // Show ticket detail modal
  window.showTicketDetail = async function(ticketId) {
    try {
      // In a real app, fetch detailed ticket info
      // For now, show a placeholder
      document.getElementById('ticket-detail-title').textContent = `Ticket ${ticketId}`;
      document.getElementById('ticket-detail-content').innerHTML = `
        <div class="space-y-4">
          <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
            <h4 class="font-semibold text-blue-900 dark:text-blue-100">MACD Ticket Details</h4>
            <p class="text-blue-800 dark:text-blue-200">Detailed ticket information would be loaded here with full history, comments, and status tracking.</p>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <h5 class="font-medium text-gray-900 dark:text-white mb-2">Status Workflow</h5>
              <div class="space-y-2">
                <div class="flex items-center space-x-2">
                  <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                  <span class="text-sm">New</span>
                </div>
                <div class="flex items-center space-x-2">
                  <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                  <span class="text-sm">In Progress</span>
                </div>
                <div class="flex items-center space-x-2">
                  <div class="w-3 h-3 bg-gray-300 rounded-full"></div>
                  <span class="text-sm">Awaiting Info</span>
                </div>
                <div class="flex items-center space-x-2">
                  <div class="w-3 h-3 bg-gray-300 rounded-full"></div>
                  <span class="text-sm">Completed</span>
                </div>
              </div>
            </div>
            <div>
              <h5 class="font-medium text-gray-900 dark:text-white mb-2">Recent Activity</h5>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                Activity logs and comments would appear here...
              </div>
            </div>
          </div>
        </div>
      `;
      ticketDetailModal.classList.remove('hidden');
    } catch (error) {
      console.error('Error showing ticket detail:', error);
    }
  };

  // Change ticket status
  window.changeStatus = async function(ticketId, currentStatus) {
    const newStatus = prompt(`Change status for ticket ${ticketId}. Current: ${currentStatus}\nEnter new status (new, in_progress, awaiting_info, completed, closed):`);
    
    if (newStatus && ['new', 'in_progress', 'awaiting_info', 'completed', 'closed'].includes(newStatus)) {
      try {
        const response = await fetch(`/api/tickets/${ticketId}/status`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ 
            status: newStatus, 
            reason: 'Status updated via MACD interface' 
          })
        });

        const result = await response.json();
        if (response.ok) {
          alert(`Ticket ${ticketId} status updated to ${newStatus}`);
          loadTickets(); // Refresh
        } else {
          alert(`Error: ${result.error}`);
        }
      } catch (error) {
        console.error('Error updating status:', error);
        alert('Failed to update status');
      }
    }
  };

  // Utility function for debouncing search
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Initial load
  loadTickets();
});
</script>

<script>
  import { DataService } from "../lib/data";
  import type { Ticket } from "../lib/types";

  document.addEventListener('DOMContentLoaded', () => {
    // Common Modal Elements
    const newTicketModal = document.getElementById('newTicketModal');
    const ticketDetailModal = document.getElementById('ticketDetailModal');

    // New Ticket Modal Elements & Logic
    const createTicketBtn = document.getElementById('create-ticket-btn');
    const newTicketCloseBtn = document.getElementById('new-ticket-close-btn');

    const openNewTicketModal = () => newTicketModal?.classList.remove('hidden');
    const closeNewTicketModal = () => newTicketModal?.classList.add('hidden');

    createTicketBtn?.addEventListener('click', openNewTicketModal);
    newTicketCloseBtn?.addEventListener('click', closeNewTicketModal);

    // Ticket Detail Modal Elements & Logic
    const detailTicketCloseBtn = document.getElementById('detail-ticket-close-btn');
    const ticketRows = document.querySelectorAll('.ticket-row');

    const closeAndResetDetailModal = () => {
      if (ticketDetailModal) {
        ticketDetailModal.classList.add('hidden');
        // Reset content to avoid showing stale data
        document.getElementById('detail-title')!.textContent = 'Ticket Title';
        document.getElementById('detail-description')!.textContent = 'Loading...';
        document.getElementById('detail-status')!.textContent = 'Loading...';
        document.getElementById('detail-priority')!.textContent = 'Loading...';
        document.getElementById('detail-type')!.textContent = 'Loading...';
        document.getElementById('detail-assignee')!.textContent = 'Loading...';
        document.getElementById('detail-created')!.textContent = 'Loading...';
      }
    };

    ticketRows.forEach(row => {
      row.addEventListener('click', async (e) => {
        // Prevent modal opening if a button inside the row is clicked
        if ((e.target as HTMLElement).closest('button')) {
          return;
        }

        const ticketId = row.getAttribute('data-ticket-id');
        if (!ticketId || !ticketDetailModal) return;

        const ticket: Ticket | undefined = await DataService.getTicketById(parseInt(ticketId, 10));

        if (ticket) {
          // Update modal content with ticket details
          document.getElementById('detail-title')!.textContent = ticket.title;
          document.getElementById('detail-description')!.textContent = ticket.description;
          document.getElementById('detail-status')!.textContent = ticket.status;
          document.getElementById('detail-priority')!.textContent = ticket.priority;
          document.getElementById('detail-type')!.textContent = ticket.type ? ticket.type.replace('_', ' ') : 'General';
          document.getElementById('detail-assignee')!.textContent = ticket.assigneeName || 'Unassigned';
          document.getElementById('detail-created')!.textContent = ticket.createdAt ? 
            (ticket.createdAt instanceof Date ? ticket.createdAt.toLocaleDateString() : new Date(ticket.createdAt).toLocaleDateString()) : 'N/A';

          // Show the ticket detail modal
          ticketDetailModal.classList.remove('hidden');
        }
      });
    });

    detailTicketCloseBtn?.addEventListener('click', closeAndResetDetailModal);

    // Close modals on outside click
    document.addEventListener('click', (e) => {
      if (newTicketModal && !newTicketModal.contains(e.target as Node)) {
        closeNewTicketModal();
      }
      if (ticketDetailModal && !ticketDetailModal.contains(e.target as Node)) {
        closeAndResetDetailModal();
      }
    });
  });
</script>
