---
// Redirect to login if not authenticated
if (!Astro.cookies.has('session')) {
  const currentPath = new URL(Astro.request.url).pathname;
  return new Response(null, { status: 302, headers: { Location: `/login?redirect=${currentPath}` } });
}

import BaseLayout from '../layouts/BaseLayout.astro';
import { DataService } from "../lib/data";

// Load all lines for management interface
const lines = await DataService.getLines();
const stats = DataService.calculateStats(lines);

const title = "Telco - Line Management";
---

<BaseLayout title={title} pageTitle="Line Management" currentPage="lines">
  <!-- Header with stats -->
  <div class="mb-6">
    <div class="flex justify-between items-center mb-4">
      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Line Management</h1>
      <button class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition">
        <i class="fas fa-plus mr-2"></i>Add New Line
      </button>
    </div>
    
    <!-- Quick stats with real data -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-blue-100 dark:bg-blue-900 rounded-lg">
            <i class="fas fa-phone text-blue-600 dark:text-blue-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Total Lines</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{stats.totalLines}</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-green-100 dark:bg-green-900 rounded-lg">
            <i class="fas fa-check-circle text-green-600 dark:text-green-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Active Lines</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">{stats.activeLines}</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg">
            <i class="fas fa-dollar-sign text-yellow-600 dark:text-yellow-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Monthly Cost</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">${stats.monthlyTotal.toLocaleString()}</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <div class="flex items-center">
          <div class="p-2 bg-purple-100 dark:bg-purple-900 rounded-lg">
            <i class="fas fa-chart-line text-purple-600 dark:text-purple-400"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm text-gray-500 dark:text-gray-400">Users over 10GB</p>
            <p class="text-xl font-bold text-gray-900 dark:text-white">78</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Lines Table -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700">
      <div class="flex items-center justify-between">
        <h2 class="text-lg font-medium text-gray-900 dark:text-white">Lines ({stats.totalLines})</h2>
        <div class="flex items-center space-x-2">
          <span class="text-sm text-gray-600 dark:text-gray-300">Showing 1-6 of {stats.totalLines}</span>
        </div>
      </div>
    </div>
    
    <div class="overflow-x-auto">
      <table class="w-full">
        <thead class="bg-gray-50 dark:bg-gray-700 border-b-2 border-gray-200 dark:border-gray-600">
          <tr>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Carrier</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Line Name</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Phone Number</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Plan</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Monthly Rate</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider">Status</th>
          </tr>
        </thead>
        <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
          {lines.slice(0, 6).map((line) => (
            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
              <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">{line.carrier}</td>
              <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">{line.assignedUser}</td>
              <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">{line.lineNumber}</td>
              <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">{line.department || 'N/A'}</td>
              <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">${line.monthlyCost}</td>
              <td class="px-4 py-4 whitespace-nowrap">
                <span class={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${
                  line.status === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' :
                  line.status === 'suspended' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300' :
                  'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'
                }`}>
                  {line.status.charAt(0).toUpperCase() + line.status.slice(1)}
                </span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    
    <div class="px-6 py-4 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600">
      <div class="flex items-center justify-between">
        <p class="text-sm text-gray-600 dark:text-gray-300">
          Showing first 6 lines. Full table functionality available in production version.
        </p>
        <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm transition">
          View All Lines
        </button>
      </div>
    </div>
  </div>
</BaseLayout>
